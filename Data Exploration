# Covid 19 Data Exploration ,
# Skills used: Joins, CTE's, Windows Functions, Aggregate Functions, Creating Views,

--# Looking at the data.

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM `my-project-91151-01.SQL01_Data_Exploration.CovidDeaths` LIMIT 1000

-- # It is Finding death percentage over total deaths and total cases. Also it shows the death percentage in Canada.

SELECT location, date, total_cases, total_deaths, (total_deaths / total_cases) * 100 AS DeathPercentage
FROM `my-project-91151-01.SQL01_Data_Exploration.CovidDeaths`
WHERE location LIKE '%Canada%'
ORDER BY 1,2

--# Finding the highest infection rate at countries compared to population. Line 18 could be optional and we can put each country.

SELECT location, max(total_cases) AS HighestInfectionRate, population, max((total_cases / population)) * 100 AS PercentagePopulationInfected
FROM `my-project-91151-01.SQL01_Data_Exploration.CovidDeaths`
--WHERE location LIKE '%Canada%'
WHERE continent IS NOT null
GROUP BY location, population
ORDER BY PercentagePopulationInfected DESC

-- Indicating countries with highest death count per population.

SELECT location, MAX(total_deaths) AS TotalDeathCount
FROM `my-project-91151-01.SQL01_Data_Exploration.CovidDeaths`
--WHERE location LIKE '%Canada%'
WHERE continent IS NOT null
GROUP BY location
ORDER BY TotalDeathCount DESC

----LET'S BREAK THINGS DOWN BY CONTINENTS
----Showing continent with the highest death count per population

SELECT continent, MAX(total_deaths) AS TotalDeathCount
FROM `my-project-91151-01.SQL01_Data_Exploration.CovidDeaths`
--WHERE location LIKE '%Canada%'
WHERE continent IS NOT null
GROUP BY continent
ORDER BY TotalDeathCount DESC

----Take a look at "North America" death per populatipon over countries.

SELECT location, continent, MAX(total_deaths) AS TotalDeathCount
FROM `my-project-91151-01.SQL01_Data_Exploration.CovidDeaths`
--WHERE location LIKE '%Canada%'
WHERE continent = 'North America'
GROUP BY continent, location
ORDER BY TotalDeathCount DESC

--Global Overview

SELECT date, SUM(new_cases) AS TotalCases,SUM(new_deaths) AS TotalDeaths, (SUM(new_deaths) / SUM(new_cases))*100 AS DeathPercentage
FROM `my-project-91151-01.SQL01_Data_Exploration.CovidDeaths`
--WHERE location LIKE '%Canada%' and
WHERE continent IS NOT NULL 
GROUP BY date
ORDER BY 1,2

---- Global Overview (Summary)

SELECT SUM(new_cases) AS TotalCases,SUM(new_deaths) AS TotalDeaths, (SUM(new_deaths) / SUM(new_cases))*100 AS DeathPercentage
FROM `my-project-91151-01.SQL01_Data_Exploration.CovidDeaths`
--WHERE location LIKE '%Canada%' and
WHERE continent IS NOT NULL 
--GROUP BY date
ORDER BY 1,2

---- Looking at total population vs. vaccination.(Rollling Count)

SELECT Dea.continent, Dea.location, Dea.date, Dea.population, Vac.new_vaccinations,
SUM(Vac.new_vaccinations) OVER (PARTITION BY Dea.location ORDER BY Dea.date, Dea.location) AS
People_Vaccinated_RollingCount
FROM `my-project-91151-01.SQL01_Data_Exploration.CovidDeaths` AS Dea
JOIN `my-project-91151-01.SQL01_Data_Exploration.CovidVaccination` AS Vac
  ON Dea.location = Vac.location
  AND Dea.date = Vac.date
WHERE Dea.continent IS NOT NULL  
ORDER BY 2,3

------ Finding the vaccination number compare to the population.(Using CTE)

WITH Population_Vs_Vaccination --in BigQuery you don't need to add these columns(continent, location, date, population, new_vaccinations, People_Vaccinated_RollingCount)
AS 
(
SELECT Dea.continent, Dea.location, Dea.date, Dea.population, Vac.new_vaccinations,
SUM(Vac.new_vaccinations) OVER (PARTITION BY Dea.location ORDER BY Dea.date, Dea.location)
 AS People_Vaccinated_RollingCount
FROM `my-project-91151-01.SQL01_Data_Exploration.CovidDeaths` AS Dea
JOIN `my-project-91151-01.SQL01_Data_Exploration.CovidVaccination` AS Vac
  ON Dea.location = Vac.location
  AND Dea.date = Vac.date
WHERE Dea.continent IS NOT NULL 
)
--ORDER BY 2,3
SELECT * , (People_Vaccinated_RollingCount / population) * 100 AS Vaccination_Population_Percentage
FROM Population_Vs_Vaccination

-- Creating view for data visualization.

CREATE VIEW my-project-91151-01.SQL01_Data_Exploration.Population_Vs_Vaccination AS
SELECT Dea.continent, Dea.location, Dea.date, Dea.population, Vac.new_vaccinations,
SUM(Vac.new_vaccinations) OVER (PARTITION BY Dea.location ORDER BY Dea.date, Dea.location)
 AS People_Vaccinated_RollingCount
FROM `my-project-91151-01.SQL01_Data_Exploration.CovidDeaths` AS Dea
JOIN `my-project-91151-01.SQL01_Data_Exploration.CovidVaccination` AS Vac
  ON Dea.location = Vac.location
  AND Dea.date = Vac.date
WHERE Dea.continent IS NOT NULL 
--ORDER BY 2,3







